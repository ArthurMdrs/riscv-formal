<?xml version="1.0" encoding="UTF-8"?>
<wavelist version="3">
  <insertion-point-position>68</insertion-point-position>
  <wave>
    <expr>clock</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>&lt;embedded&gt;::rvfi_testbench.checker_inst._assert_1</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>checker_inst.check</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>checker_inst.reset</expr>
    <label/>
    <radix/>
  </wave>
  <spacer/>
  <wave collapsed="true">
    <expr>wrapper.uut.if_stage_i.instr_decompressed</expr>
    <label/>
    <radix>checker_inst.rs1_addr</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.if_stage_i.fetch_rdata</expr>
    <label/>
    <radix/>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.id_stage_i.decoder_i.instr_rdata_i</expr>
    <label/>
    <radix>checker_inst.rs1_addr</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.id_stage_i.controller_i.ctrl_fsm_cs</expr>
    <label/>
    <radix>wrapper.uut.id_stage_i.controller_i.ctrl_fsm_cs</radix>
  </wave>
  <spacer/>
  <wave collapsed="true">
    <expr>wrapper.uut.rvfi_insn_if</expr>
    <label/>
    <radix>wrapper.uut.if_stage_i.instr_decompressed</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.rvfi_insn_id</expr>
    <label/>
    <radix>checker_inst.register_index</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.rvfi_insn_ex</expr>
    <label/>
    <radix>checker_inst.register_index</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.rvfi_insn_wb</expr>
    <label/>
    <radix>checker_inst.register_index</radix>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[31]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[30]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[29]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[28]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[27]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[26]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[25]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[24]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[23]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[22]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[21]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[20]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[19]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[18]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[17]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[16]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[15]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[14]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[13]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[12]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[11]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[10]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[9]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[8]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[7]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[6]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[5]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[4]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[3]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[2]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[1]</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.rvfi_insn_wb[0]</expr>
      <label/>
      <radix/>
    </wave>
  </wave>
  <wave>
    <expr>wrapper.uut.rvfi_valid_id</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>wrapper.uut.rvfi_valid_ex</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>wrapper.uut.rvfi_valid_wb</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>rvfi_trap</expr>
    <label/>
    <radix/>
  </wave>
  <spacer/>
  <wave collapsed="true">
    <expr>wrapper.uut.id_stage_i.decoder_i.instr_rdata_i</expr>
    <label/>
    <radix>wrapper.uut.if_stage_i.instr_decompressed</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.id_stage_i.decoder_i.instr_rdata_i[6:0]</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>wrapper.uut.id_stage_i.data_misaligned_i</expr>
    <label/>
    <radix/>
  </wave>
  <group collapsed="false">
    <expr/>
    <label>Data mem interface</label>
    <wave>
      <expr>wrapper.uut.load_store_unit_i.data_req_o</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.load_store_unit_i.data_gnt_i</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.load_store_unit_i.data_we_o</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.load_store_unit_i.data_rvalid_i</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.data_err_pmp</expr>
      <label/>
      <radix/>
    </wave>
  </group>
  <wave collapsed="true">
    <expr>wrapper.uut.load_store_unit_i.CS</expr>
    <label/>
    <radix>wrapper.uut.load_store_unit_i.CS</radix>
  </wave>
  <wave collapsed="true">
    <expr>wrapper.uut.load_store_unit_i.NS</expr>
    <label/>
    <radix>wrapper.uut.load_store_unit_i.CS</radix>
  </wave>
  <wave>
    <expr>wrapper.uut.ex_valid</expr>
    <label/>
    <radix/>
  </wave>
  <spacer/>
  <group collapsed="false">
    <expr/>
    <label>Got rvalid after wait</label>
    <group collapsed="true">
      <expr>wrapper.uut.insn_ex_is_load &amp;&amp; wrapper.uut.load_store_unit_i.data_rvalid_i &amp;&amp; wrapper.uut.load_store_unit_i.CS==2'b01</expr>
      <label>wrapper.uut.insn_ex_is_load &amp;&amp; wrapper.uut.load_store_unit_i.data_rvalid_i &amp;&amp; wrapper.uut.load_store_unit_i.CS==2'b01</label>
      <radix/>
      <wave>
        <expr>wrapper.uut.insn_ex_is_load</expr>
        <label/>
        <radix/>
      </wave>
      <wave>
        <expr>wrapper.uut.load_store_unit_i.data_rvalid_i</expr>
        <label/>
        <radix/>
      </wave>
      <wave collapsed="true">
        <expr>wrapper.uut.load_store_unit_i.CS</expr>
        <label/>
        <radix>wrapper.uut.load_store_unit_i.CS</radix>
      </wave>
    </group>
  </group>
  <wave>
    <expr>wrapper.uut.insn_ex_is_store</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>wrapper.uut.insn_ex_is_load</expr>
    <label/>
    <radix/>
  </wave>
  <wave>
    <expr>wrapper.uut.misaligned_access</expr>
    <label/>
    <radix/>
  </wave>
  <spacer/>
  <group collapsed="false">
    <expr/>
    <label>Regfile WB port</label>
    <wave>
      <expr>wrapper.uut.id_stage_i.regfile_we_wb_i</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.id_stage_i.regfile_wdata_wb_i</expr>
      <label/>
      <radix>wrapper.uut.if_stage_i.instr_decompressed</radix>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.id_stage_i.regfile_waddr_wb_i</expr>
      <label/>
      <radix>checker_inst.rvfi_rs1_addr</radix>
    </wave>
  </group>
  <spacer/>
  <group collapsed="true">
    <expr/>
    <label>Regfile EX port</label>
    <wave>
      <expr>wrapper.uut.ex_stage_i.regfile_alu_we_fw_o</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.ex_stage_i.regfile_alu_wdata_fw_o</expr>
      <label/>
      <radix>wrapper.uut.rvfi_rd_wdata_wb</radix>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.id_stage_i.regfile_waddr_ex_o</expr>
      <label/>
      <radix>checker_inst.rvfi_rs1_addr</radix>
    </wave>
  </group>
  <spacer/>
  <group collapsed="false">
    <expr/>
    <label>rvfi_mem</label>
    <wave collapsed="true">
      <expr>wrapper.uut.rvfi_mem_addr_wb</expr>
      <label/>
      <radix>checker_inst.mem_addr</radix>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.rvfi_mem_rmask_wb</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.rvfi_mem_rdata_wb</expr>
      <label/>
      <radix>checker_inst.mem_addr</radix>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.rvfi_mem_wmask_wb</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.rvfi_mem_wdata_wb</expr>
      <label/>
      <radix>checker_inst.mem_addr</radix>
    </wave>
  </group>
  <spacer/>
  <group collapsed="false">
    <expr/>
    <label>spec_mem</label>
    <wave collapsed="true">
      <expr>checker_inst.spec_mem_addr</expr>
      <label/>
      <radix>checker_inst.mem_addr</radix>
    </wave>
    <wave collapsed="true">
      <expr>checker_inst.spec_mem_rmask</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>checker_inst.spec_mem_wmask</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>checker_inst.spec_mem_wdata</expr>
      <label/>
      <radix>wrapper.uut.ex_stage_i.regfile_alu_wdata_fw_o</radix>
    </wave>
  </group>
  <spacer/>
  <group collapsed="false">
    <expr/>
    <label>Other useful signals</label>
    <wave collapsed="true">
      <expr>wrapper.uut.load_store_unit_i.data_addr_o</expr>
      <label/>
      <radix>checker_inst.mem_addr</radix>
    </wave>
    <wave>
      <expr>wrapper.uut.ex_ready</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.lsu_ready_wb</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.rvfi_mem_addr_ex</expr>
      <label/>
      <radix>checker_inst.mem_addr</radix>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.load_store_unit_i.data_be</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.load_store_unit_i.data_addr_int[1:0]</expr>
      <label/>
      <radix/>
    </wave>
    <wave collapsed="true">
      <expr>wrapper.uut.load_store_unit_i.data_type_ex_i</expr>
      <label/>
      <radix/>
    </wave>
    <wave>
      <expr>wrapper.uut.load_store_unit_i.misaligned_st</expr>
      <label/>
      <radix/>
    </wave>
  </group>
  <wave collapsed="true">
    <expr>wrapper.uut.rvfi_mem_wmask_ex</expr>
    <label/>
    <radix/>
  </wave>
  <highlightlist>
    <!--Users can remove the highlightlist block if they want to load the signal save file into older version of Jasper-->
    <highlight>
      <expr>checker_inst.register_shadow</expr>
      <color>builtin_red</color>
    </highlight>
    <highlight>
      <expr>checker_inst.rvfi_rs1_rdata</expr>
      <color>builtin_green</color>
    </highlight>
    <highlight>
      <expr>checker_inst.rvfi_rs2_rdata</expr>
      <color>builtin_blue</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.data_err_pmp</expr>
      <color>builtin_yellow</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.id_stage_i.decoder_i.instr_rdata_i</expr>
      <color>builtin_blue</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.if_stage_i.fetch_rdata</expr>
      <color>builtin_blue</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.load_store_unit_i.data_addr_o</expr>
      <color>builtin_orange</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.load_store_unit_i.data_gnt_i</expr>
      <color>builtin_yellow</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.load_store_unit_i.data_req_o</expr>
      <color>builtin_yellow</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.load_store_unit_i.data_rvalid_i</expr>
      <color>builtin_yellow</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.load_store_unit_i.data_we_o</expr>
      <color>builtin_yellow</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.rvfi_insn_wb</expr>
      <color>builtin_red</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.rvfi_pc_rdata_wb</expr>
      <color>builtin_green</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.rvfi_pc_wdata_wb</expr>
      <color>builtin_green</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.rvfi_rd_addr_wb</expr>
      <color>builtin_green</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.rvfi_rd_wdata_wb</expr>
      <color>builtin_blue</color>
    </highlight>
    <highlight>
      <expr>wrapper.uut.rvfi_valid_wb</expr>
      <color>builtin_red</color>
    </highlight>
  </highlightlist>
</wavelist>
