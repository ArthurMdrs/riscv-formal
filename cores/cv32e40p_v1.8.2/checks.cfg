[options]
isa rv32imcx
# nret 2

[groups]
regular
mul
div
mygrp
corev

[depth]
# mygrp_insn 15
# csrw_mcycle 15
csrw_hwlp_.* 15

# insn_mulh 15
# insn_blt 15
# insn_lui 15

# insn_cv_sb 15
# insn_cv_lw 15

# corev_insn             20
# regular_insn           20
# mul_insn               25
# div_insn               50
# csrw                   20
# reg           8        25
# causal        8        30
# unique        8   25   40
# pc_fwd       10        30
# pc_bwd       10        30
# cover         1        20

[sort]
corev_insn_.*
regular_insn_.*
mul_insn_.*
div_insn_.*
csrw
causal
unique
pc_bwd
pc_fwd
reg

[filter-checks]
- .*insn_.*_ch1
- .*csrw_.*_ch1
- reg_ch1

- regular_insn_mul.*
- regular_insn_div.*
- regular_insn_rem.*
- regular_insn_pv_dot.*

+ mul_insn_mul.*
- mul_insn

+ div_insn_div.*
+ div_insn_rem.*
- div_insn

+ mygrp_insn_add_ch0
+ mygrp_insn_auipc_ch0
+ mygrp_insn_blt_ch0
+ mygrp_insn_c_j_ch0
+ mygrp_insn_jal_ch0
+ mygrp_insn_jalr_ch0
+ mygrp_insn_lh_ch0
+ mygrp_insn_lw_ch0
+ mygrp_insn_sb_ch0
+ mygrp_insn_sw_ch0
# + mygrp_insn_p_sw_ch0
- mygrp_insn

+ corev_insn_cv_.*
- corev_insn

[defines]
# `define CV32E40P_RVFI
`define RISCV_FORMAL_ALTOPS
`define RISCV_FORMAL_CUSTOM_ISA

# [defines reg]
# `define CV32P_REG_CHECK

# [defines liveness]
# `define CV32P_FAIRNESS

[csrs]
misa
mhartid
mvendorid
marchid
mimpid

#Trap setup
mstatus
mie
mtvec

#Trap handling
mepc
mcause
mscratch
mip

# Performance counters/monitor
# mcounteren # Not implemented in this version of the core
mcountinhibit
mhpmevent3
mhpmevent31
mcycle
minstret
mhpmcounter3
mhpmcounter31

# FP CSRs (F extension is disabled atm)
# fflags
# frm
# fcsr

# Debug CSRs (not supported by riscv formal currently)
# dcsr
# dpc
# dscratch0
# dscratch1

[custom_csrs]
CC0 mu hwlp_start0
CC1 mu hwlp_end0
CC2 mu hwlp_counter0
CC4 mu hwlp_start1
CC5 mu hwlp_end1
CC6 mu hwlp_counter1

[cover]
always @* if (!reset) cover (channel[0].cnt_insns == 13);

[verilog-files]
@basedir@/cores/@core@/cv32e40p/rtl/include/cv32e40p_apu_core_pkg.sv
@basedir@/cores/@core@/cv32e40p/rtl/include/cv32e40p_fpu_pkg.sv
@basedir@/cores/@core@/cv32e40p/rtl/include/cv32e40p_pkg.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_if_stage.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_cs_registers.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_register_file_ff.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_load_store_unit.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_id_stage.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_aligner.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_decoder.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_compressed_decoder.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_fifo.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_prefetch_buffer.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_hwloop_regs.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_mult.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_int_controller.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_ex_stage.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_alu_div.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_alu.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_ff_one.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_popcnt.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_apu_disp.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_controller.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_obi_interface.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_prefetch_controller.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_sleep_unit.sv
@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_core.sv

@basedir@/cores/@core@/cv32e40p/rtl/cv32e40p_top.sv

@basedir@/cores/@core@/cv32e40p/bhv/cv32e40p_sim_clock_gate.sv
# @basedir@/cores/@core@/cv32e40p/bhv/include/cv32e40p_tracer_pkg.sv
# @basedir@/cores/@core@/cv32e40p/bhv/cv32e40p_tb_wrapper.sv

@basedir@/cores/@core@/rvfi_wrapper.sv

[include-dirs]
@basedir@/cores/@core@/cv32e40p/rtl/include
@basedir@/cores/@core@/cv32e40p/bhv
@basedir@/cores/@core@/cv32e40p/bhv/include
@basedir@/cores/@core@/cv32e40p/sva